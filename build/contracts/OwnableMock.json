{
  "contractName": "OwnableMock",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\\r\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\\r\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call\\r `onlyOwner` functions anymore. Can only be called by the current owner.\\r      * NOTE: Renouncing ownership will leave the contract without an owner,\\r thereby removing any functionality that is only available to the owner.\\r\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`).\\r Can only be called by the current owner.\\r\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Lauri/Documents/projects/ScoreMilk/contracts/mocks/OwnableMock.sol\":\"OwnableMock\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Lauri/Documents/projects/ScoreMilk/contracts/mocks/OwnableMock.sol\":{\"keccak256\":\"0x1f325b7588c938fd07194a376acb7d5e056b4465aacfc7212b8d5ca50645f0ec\",\"urls\":[\"bzzr://20a76aa349bce6dd590d24c320a49037a60520979fe23d7662101fea112a5961\"]},\"/C/Users/Lauri/Documents/projects/ScoreMilk/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xaee64cb4717c1f42a4ff71bfe612dfada718d29df5cecddf1f536766b47e61a0\",\"urls\":[\"bzzr://e3f784beb36726e841e5212f4a85b8a6686f5fd11fe70251eb2edc4e2b0fe452\"]}},\"version\":1}",
  "bytecode": "0x60806040526000339050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35061054d806100b46000396000f3fe608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063715018a6146100675780638da5cb5b1461007e5780638f32d59b146100d5578063f2fde38b14610104575b600080fd5b34801561007357600080fd5b5061007c610155565b005b34801561008a57600080fd5b50610093610290565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100e157600080fd5b506100ea6102b9565b604051808215151515815260200191505060405180910390f35b34801561011057600080fd5b506101536004803603602081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610310565b005b61015d6102b9565b15156101d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6103186102b9565b151561038c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61039581610398565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610463576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a7230582056beca6964bb2c3f47934285220d1a46cc87c1387f922d8ba84b7351d88794e80029",
  "deployedBytecode": "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063715018a6146100675780638da5cb5b1461007e5780638f32d59b146100d5578063f2fde38b14610104575b600080fd5b34801561007357600080fd5b5061007c610155565b005b34801561008a57600080fd5b50610093610290565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100e157600080fd5b506100ea6102b9565b604051808215151515815260200191505060405180910390f35b34801561011057600080fd5b506101536004803603602081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610310565b005b61015d6102b9565b15156101d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6103186102b9565b151561038c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61039581610398565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610463576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a7230582056beca6964bb2c3f47934285220d1a46cc87c1387f922d8ba84b7351d88794e80029",
  "sourceMap": "65:90:5:-;;;678:17:7;698:10;678:30;;728:9;719:6;;:18;;;;;;;;;;;;;;;;;;786:9;753:43;;782:1;753:43;;;;;;;;;;;;643:161;65:90:5;;;;;;",
  "deployedSourceMap": "65:90:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1694:140:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1694:140:7;;;;;;885:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;885:79:7;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1251:92:7;;;;;;;;;;;;;;;;;;;;;;;;;;;1989:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1989:109:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1989:109:7;;;;;;;;;;;;;;;;;;;;;;1694:140;1097:9;:7;:9::i;:::-;1089:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1793:1;1756:40;;1777:6;;;;;;;;;;;1756:40;;;;;;;;;;;;1824:1;1807:6;;:19;;;;;;;;;;;;;;;;;;1694:140::o;885:79::-;923:7;950:6;;;;;;;;;;;943:13;;885:79;:::o;1251:92::-;1291:4;1329:6;;;;;;;;;;;1315:20;;:10;:20;;;1308:27;;1251:92;:::o;1989:109::-;1097:9;:7;:9::i;:::-;1089:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2062:28;2081:8;2062:18;:28::i;:::-;1989:109;:::o;2204:229::-;2298:1;2278:22;;:8;:22;;;;2270:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2388:8;2359:38;;2380:6;;;;;;;;;;;2359:38;;;;;;;;;;;;2417:8;2408:6;;:17;;;;;;;;;;;;;;;;;;2204:229;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"../ownership/Ownable.sol\";\r\n\r\ncontract OwnableMock is Ownable {\r\n    // solhint-disable-previous-line no-empty-blocks\r\n}",
  "sourcePath": "C:/Users/Lauri/Documents/projects/ScoreMilk/contracts/mocks/OwnableMock.sol",
  "ast": {
    "absolutePath": "/C/Users/Lauri/Documents/projects/ScoreMilk/contracts/mocks/OwnableMock.sol",
    "exportedSymbols": {
      "OwnableMock": [
        524
      ]
    },
    "id": 525,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 520,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/C/Users/Lauri/Documents/projects/ScoreMilk/contracts/ownership/Ownable.sol",
        "file": "../ownership/Ownable.sol",
        "id": 521,
        "nodeType": "ImportDirective",
        "scope": 525,
        "sourceUnit": 724,
        "src": "27:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 522,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 723,
              "src": "89:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$723",
                "typeString": "contract Ownable"
              }
            },
            "id": 523,
            "nodeType": "InheritanceSpecifier",
            "src": "89:7:5"
          }
        ],
        "contractDependencies": [
          723
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 524,
        "linearizedBaseContracts": [
          524,
          723
        ],
        "name": "OwnableMock",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 525,
        "src": "65:90:5"
      }
    ],
    "src": "0:155:5"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Lauri/Documents/projects/ScoreMilk/contracts/mocks/OwnableMock.sol",
    "exportedSymbols": {
      "OwnableMock": [
        524
      ]
    },
    "id": 525,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 520,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/C/Users/Lauri/Documents/projects/ScoreMilk/contracts/ownership/Ownable.sol",
        "file": "../ownership/Ownable.sol",
        "id": 521,
        "nodeType": "ImportDirective",
        "scope": 525,
        "sourceUnit": 724,
        "src": "27:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 522,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 723,
              "src": "89:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$723",
                "typeString": "contract Ownable"
              }
            },
            "id": 523,
            "nodeType": "InheritanceSpecifier",
            "src": "89:7:5"
          }
        ],
        "contractDependencies": [
          723
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 524,
        "linearizedBaseContracts": [
          524,
          723
        ],
        "name": "OwnableMock",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 525,
        "src": "65:90:5"
      }
    ],
    "src": "0:155:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-06T17:56:41.573Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner.\r"
      },
      "owner()": {
        "details": "Returns the address of the current owner.\r"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call\r `onlyOwner` functions anymore. Can only be called by the current owner.\r      * NOTE: Renouncing ownership will leave the contract without an owner,\r thereby removing any functionality that is only available to the owner.\r"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`).\r Can only be called by the current owner.\r"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}